var mongoose = require('mongoose');
var device = require('config/devicemodel');
var listenlisting = require('config/listenmodel');
var horde = require('config/hordemodel');
var rand = require('csprng');
var crypto = require('crypto');
var fs = require('fs');
mongoose.connect('mongodb://localhost/telepastyv2');

exports.testing_export = function(devicetype, installid, installrh, callback) {
  callback({'response':"device type from testing.js is "+ devicetype+
  " and installid from testing.js is "+ installid + "installRHKey from testing.js is "+installrh});
};


exports.init_regist = function(devicetype, installid, installrh, callback) {

  require.extensions['.txt'] = function (module, filename) {
    module.exports = fs.readFileSync(filename, 'utf8');
  };
  var fourletter= require("./fourletter.txt");
  var devicesalt = rand(160, 36);
  var hashed_password = crypto.createHash('sha512').update(devicesalt+installrh).digest("hex");
  var wordnumber1 = Math.floor(Math.random()*4005);
  var wordnumber2 = Math.floor(Math.random()*4005);
  var xxxx_xxxx = fourletter.substring(wordnumber1*5, wordnumber1*5+4)+" "+fourletter.substring(wordnumber2*5, wordnumber2*5+4);

  var newdevice = new device({
    install_ID: installid,
    device_type: devicetype,
    hashed_password: hashed_password,
    device_salt :devicesalt,
    xxxx_xxxx:xxxx_xxxx});

  device.find({install_ID: installid},function(err,founddevices){
      var len = founddevices.length;
      if(len == 0){
        newdevice.save();
	var now = new Date()
	var expireDateObj =  new Date (now.getTime()+ 5*60000); //5 is minutes delay
	var expiretime = expireDateObj.getTime();
        var newlistenlisting = new listenlisting({
	  xxxx_xxxx: xxxx_xxxx,
	  xxxxExpiretime: expiretime});
	newlistenlisting.save();
	console.log(expiretime);
	callback({'response':"Expiretime is "+expiretime+". To add this device to an existing account, paste these words from any device in that account: "+xxxx_xxxx});
	var newHorde = new horde({
	  devices: [newdevice]
	});
	newHorde.save();
	
      }
      else{
        callback({'response':"This install has already been registered. Client savedprefs prob?"});
      }
  });

};

